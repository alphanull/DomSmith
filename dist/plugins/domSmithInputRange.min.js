/*!
* DomSmith – Javascript Dom library
* @license MIT
* © 2016–present Frank Kudermann @ alphanull
*/
var e={addNode:function(e){if(!e._tag||"input"!==e._tag.toLowerCase()||"range"!==e.type||e.$rangeFixDisable)return;let t=!1,n=null,i=!1;const r=e._ele,a="vertical"===e.orient;function o(e){const t=a?1-(e.clientY-n.top)/n.height:(e.clientX-n.left)/n.width;return Math.max(0,Math.min(1,t))*(parseFloat(r.max)||1)}function p(t,n){e[t]?Array.isArray(e[t])?e[t].push(n):e[t]=[e[t],n]:e[t]=n}return r.addEventListener("change",(()=>{i=!0}),{passive:!0}),p("pointerdown",(e=>{"touch"===e.pointerType&&(t=!0,i=!1,n=r.getBoundingClientRect(),r.value=o(e),r.setPointerCapture(e.pointerId),r.dispatchEvent(new Event("input",{bubbles:!0})),e.preventDefault())})),p("pointermove",(e=>{"touch"===e.pointerType&&t&&n&&(r.value=o(e),r.dispatchEvent(new Event("input",{bubbles:!0})),e.preventDefault())})),p("pointerup",(e=>{t=!1,"touch"===e.pointerType&&r.releasePointerCapture(e.pointerId);const n=r.closest("vision-player");n&&n.focus(),setTimeout((()=>{i||r.dispatchEvent(new Event("change",{bubbles:!0}))}),0),e.preventDefault()})),e}};export{e as default};
